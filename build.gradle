plugins {
	id 'java'
	id 'groovy'
	id 'maven'
	id 'maven-publish'
	id 'signing'
	id 'com.jfrog.bintray' version '1.0'
}

group = 'org.unbroken-dome.gradle-plugins'
archivesBaseName = 'gradle-testsets-plugin'
version = '1.1.0.java6'


repositories {
	jcenter()
}


dependencies {
	compile gradleApi()
	
	testCompile ('org.spockframework:spock-core:0.7-groovy-2.0') {
		exclude group: 'org.codehaus.groovy'
	} 
	testCompile 'org.hamcrest:hamcrest-all:1.3'
}


def pomDefinition = pom {
	project {
		name project.friendly_name
		packaging 'jar'
		description project.description
		url project.home_url
		
		scm {
			connection "scm:git:${project.scm_url}"
			developerConnection "scm:git:${project.scm_url}"
			url project.scm_url
		}
		
		licenses {
			license {
				name = project.license_name
				url project.license_url
			}
		}
		
		developers {
			developer {
				name 'Till Krullmann'
				email 'till.krullmann@gmx.net'
			}
		}
	}
}


task generatePom {
	outputs.file "$buildDir/poms/pom.xml"
	doLast {
		pomDefinition.writeTo "$buildDir/poms/pom.xml"
	}
}


jar {
	into("META-INF/maven/$project.group/$project.name") {
		from generatePom
	}
}


task javadocJar(type: Jar) {
	description = 'Assembles a jar archive containing the javadocs.'
	classifier = 'javadoc'
	from javadoc
}


task sourcesJar(type: Jar) {
	description = 'Assembles a jar archive containing the sources.'
	classifier = 'sources'
	from sourceSets.main.allSource
}


artifacts {
	archives javadocJar, sourcesJar
}


signing {
	sign configurations.archives
}


install {
	repositories.mavenInstaller {
		beforeDeployment { deployment -> signing.signPom(deployment) }
		pom = pomDefinition
	}
}


uploadArchives {
	repositories.mavenDeployer {
		beforeDeployment { deployment -> signing.signPom(deployment) }
		
		repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2/') {
			authentication(userName: ossrh_user, password: ossrh_password)
		}
		
		snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots/') {
			authentication(userName: ossrh_user, password: ossrh_password)
		}
		
		pom = pomDefinition
	}
}


bintray {
	user = bintray_user
	key = bintray_key
	configurations = ['archives']
	
	pkg {
		repo = project.bintray_repo
		name = project.name
		desc = project.description
		websiteUrl = project.home_url
		licenses = ['MIT']
		labels = ['gradle', 'plugin', 'test', 'testset']
		
		vcsUrl = project.scm_url
		issueTrackerUrl = project.issues_url
		publicDownloadNumbers = true
		
		version {
			vcsTag = project.version
			attributes = [
				'gradle-plugin': "org.unbroken-dome.test-sets:${project.group}:${project.name}"
			]
		}
	}
}
